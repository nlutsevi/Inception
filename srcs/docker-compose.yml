#https://medium.com/swlh/wordpress-deployment-with-nginx-php-fpm-and-mariadb-using-docker-compose-55f59e5c1a

version: '3.0'

services:

  mariadb:
    hostname: mariadb

    build:
        context: ./requeriments/mariadb/
        dockerfile: Dockerfile
        args:
            - MYSQL_DB_NAME=${MYSQL_DB_NAME}
            - MYSQL_DB_USER=${MYSQL_DB_USER}
            - MYSQL_DB_PASSWORD=${MYSQL_DB_PASSWORD}
            - MYSQL_DB_ROOT_PASSWORD=${MYSQL_DB_ROOT_PASSWORD}

    networks:
      - natinet

    volumes:
      - db_vol:/var/lib/mysql
   
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQL_DB_ROOT_PASSWORD

    restart: always

    expose:
      - "3306"

  wordpress:
    hostname: wordpress

    build:
        context: ./requeriments/wordpress/
        dockerfile: Dockerfile
        args:
            - DB_NAME=${DB_NAME}
            - DB_USER=${DB_USER}
            - DB_PASSWORD=${DB_PASSWORD}

    networks:
      - natinet

    volumes:
      - wp_vol:/var/www/html/wordpress

    environment:
      #WORDPRESS_DB_HOST: 
      #MYSQL_ROOT_PASSWORD:
      WORDPRESS_DB_NAME: $DB_NAME
      WORDPRESS_DB_USER: $DB_USER
      WORDPRESS_DB_PASSWORD: $DB_PASSWORD
      WORDPRESS_TABLE_PREFIX: wp_
    
    restart: always

    expose:
      - "9000"

    depends_on:
            - mariadb

  nginx:
    hostname: nginx
    build:
        context: ./requeriments/nginx/
        dockerfile: Dockerfile

    networks:
      - natinet

    volumes:
      - wp_vol:/var/www/html/wordpress

    ports:
      - 443:443

    depends_on:
      - wordpress


networks:
  natinet:
    driver: bridge

# Mounting named volumes can persist data after we restart or remove a container. And they are also accesible by other containers. 
volumes:
  wp_vol:

    driver: local
    driver_opts:
      o: bind
      type: none
      device: /home/$USER/data/volumes
        #device: /Users/$USER/data/volumes

  db_vol:

    driver: local
    driver_opts:
      o: bind
      type: none
      device: /home/$USER/data/volumes
        #device: /Users/$USER/data/volumes
